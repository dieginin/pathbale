import{jsx as _jsx}from"react/jsx-runtime";import{Children,Suspense,useEffect,useState}from"react";import{addListeners,removeListeners}from"../utils/listeners";import{getCurrentPath}from"../utils/paths";import{match}from"path-to-regexp";export function Router({children,routes=[],loadingPage:LoadingPage=()=>_jsx("h1",{children:"Loading..."}),errorPage:ErrorPage=()=>_jsx("h1",{children:"404 - Not Found"})}){const[currentPath,setCurrentPath]=useState(getCurrentPath());useEffect(()=>{const onLocationChange=()=>setCurrentPath(getCurrentPath());addListeners(onLocationChange);return()=>removeListeners(onLocationChange)},[]);const routesFromChildren=Children.map(children,({props,type})=>{const isRoute=type.name==="Route";return isRoute?props:null});const routesToUse=routes.concat(routesFromChildren||[]).filter(Boolean);let params={};const CurrentComponent=routesToUse.find(({path})=>{if(path===currentPath)return true;const matchResult=match(path,{decode:decodeURIComponent});const matched=matchResult(currentPath);if(!matched)return false;params=matched.params;return true})?.component||ErrorPage;return _jsx(Suspense,{fallback:LoadingPage,children:_jsx(CurrentComponent,{params:params})})}